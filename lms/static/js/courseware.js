// Once generated by CoffeeScript 1.9.3, but now lives as pure JS
/* eslint-disable */
(function() {
  this.Courseware = (function() {
    Courseware.prefix = '';

    function Courseware() {
      Logger.bind();
      this.render();
      this.eventInit();
    }

    Courseware.start = function() {
      return new Courseware;
    };

    Courseware.prototype.eventInit = function(){
      var $courseContent = $('.course-content');
      var $icon = $courseContent.find('.page-header i');
      var $courseIndex = $('.course-index');
      if ($courseIndex.css('display') == 'none'){
          $icon.removeClass('fa-outdent').addClass('fa-indent')
      }
      $icon.on('click', function (e) {
        $courseIndex.toggle();
        var $src = $(e.currentTarget)
        if ($courseIndex.css('display') == 'none') {
            $src.removeClass('fa-outdent').addClass('fa-indent')
        } else {
            $src.removeClass('fa-indent').addClass('fa-outdent')
        }
      })
    }

    Courseware.prototype.render = function() {
      var courseContentElement = $('.course-content')[0];
      var blocks = XBlock.initializeBlocks(courseContentElement);

      if (courseContentElement.dataset.enableCompletionOnViewService === 'true') {
        RequireJS.require(['bundles/CompletionOnViewService'], function() {
            markBlocksCompletedOnViewIfNeeded(blocks[0].runtime, courseContentElement);
        });
      }

      return $('.course-content .histogram').each(function() {
        var error, histg, id;
        id = $(this).attr('id').replace(/histogram_/, '');
        try {
          histg = new Histogram(id, $(this).data('histogram'));
        } catch (_error) {
          error = _error;
          histg = error;
          if (typeof console !== "undefined" && console !== null) {
            console.log(error);
          }
        }
        return histg;
      });
    };

    return Courseware;

  })();

}).call(this);
